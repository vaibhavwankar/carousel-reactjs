[{"/Users/vaibhavwankar/Projects/react-carousel/src/index.js":"1","/Users/vaibhavwankar/Projects/react-carousel/src/App.js":"2","/Users/vaibhavwankar/Projects/react-carousel/src/reportWebVitals.js":"3","/Users/vaibhavwankar/Projects/react-carousel/src/Component/Carousel.js":"4","/Users/vaibhavwankar/Projects/react-carousel/src/Component/Test/Test.js":"5"},{"size":500,"mtime":1607659804936,"results":"6","hashOfConfig":"7"},{"size":185,"mtime":1607764796769,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607658153950,"results":"9","hashOfConfig":"7"},{"size":3943,"mtime":1607762621389,"results":"10","hashOfConfig":"7"},{"size":3742,"mtime":1607847401555,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nkxgv7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vaibhavwankar/Projects/react-carousel/src/index.js",[],["25","26"],"/Users/vaibhavwankar/Projects/react-carousel/src/App.js",["27"],"import Carousel from './Component/Carousel';\nimport Test from './Component/Test/Test'\nimport './App.css'\n\nconst App = (props) => {\n  \n  return (\n    <Test/>\n  );\n};\n\nexport default App;","/Users/vaibhavwankar/Projects/react-carousel/src/reportWebVitals.js",[],"/Users/vaibhavwankar/Projects/react-carousel/src/Component/Carousel.js",["28","29","30"],"import React, { useState, useEffect } from 'react';\nimport './Carousel.css'\n\nconst SPLASHBASE_URL = 'http://www.splashbase.co/api/v1/images/latest';\n\nfunction Carousel() {\n    const [imgList, setImgList] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const [currentImageIdx, setCurrentImagIdx] = useState(0);\n\n    const style = [\n        {\n            float: 'left',\n            width: '30%' ,\n            height: '250px',\n            background: 'white',\n            border: '2px solid white',\n            \n        },\n        {\n            float: 'left',\n            width: '40%' ,\n            height: '250px',\n            background: 'white',\n            border: '2px solid white',\n            \n        }\n    ]\n\n    useEffect(() => {\n        fetch(SPLASHBASE_URL)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setImgList(result.images);\n                    setIsLoaded(true);\n                    imgList.forEach(img=>{\n                        img['name']='test';\n                        img['price']='price';\n                        img['category']='category';\n                    })\n                    //console.log(imgList);\n                },\n                (error) => {\n                    setError(error);\n                    setIsLoaded(true);\n                    console.log(error);\n                }\n            )\n    }, [])\n\n    const prevSlide = () => {\n        // find out whether currentImageIdx eqals 0 and thus user reached beginning of carousel\n        const resetToVeryBack = currentImageIdx === 0;\n        const index = resetToVeryBack ? imgList.length - 1 : currentImageIdx - 1;\n        // assign the logical index to current image index that will be used in render method\n        setCurrentImagIdx(index);\n    };\n\n    const nextSlide = () => {\n        // check if we need to start over from the first index\n        const resetIndex = currentImageIdx === imgList.length - 1;\n        const index = resetIndex ? 0 : currentImageIdx + 1;\n        // assign the logical index to current image index that will be used in render method\n        setCurrentImagIdx(index);\n    }\n\n    // create a new array with 5 elements from the source images\n    const activeImageSourcesFromState = imgList.slice(currentImageIdx, currentImageIdx + 3);\n    const imageSourcesToDisplay = activeImageSourcesFromState.length < 5\n        // if the imageSourcesToDisplay's length is lower than 5 images than append missing images from the beginning of the original array\n        ? [...activeImageSourcesFromState, ...imgList.slice(0, 3 - activeImageSourcesFromState.length)]\n        : activeImageSourcesFromState;\n    //console.log(imageSourcesToDisplay);\n    //console.log(style);\n\n    return (\n\n        !isLoaded ?\n            <h1>Loading...</h1>\n            :\n            <div className=\"carousel-wrapper\">\n                \n                <ul className=\"carousel-inner\">\n                    <li>\n                        {imageSourcesToDisplay.map((images, index) =>\n                            <img key={index} className='carousel-item'src={images.url} alt=\"\" />\n\n                        )}\n                    </li>\n                </ul>\n                <div className='button'>\n                <button onClick={prevSlide}>Prev</button>\n                <button onClick={nextSlide}>Next</button>\n                </div>\n            </div>\n    );\n};\n\nexport default Carousel\n\n\n// return (\n    //     !isLoaded ?\n    //         <h1>Loading...</h1>\n    //         :\n    //         <div className=\"container\">\n\n    //             <img className=\"column\" src={imgList[0].url} alt=\"Italian Trulli\"></img>\n    //             <img className=\"column\" src={imgList[1].url} alt=\"Italian Trulli\"></img>\n    //             <img className=\"column\" src={imgList[2].url} alt=\"Italian Trulli\"></img>\n\n    //         </div>\n    // );","/Users/vaibhavwankar/Projects/react-carousel/src/Component/Test/Test.js",["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":16},{"ruleId":"37","severity":1,"message":"41","line":8,"column":12,"nodeType":"39","messageId":"40","endLine":8,"endColumn":17},{"ruleId":"37","severity":1,"message":"42","line":13,"column":11,"nodeType":"39","messageId":"40","endLine":13,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":52,"column":8,"nodeType":"45","endLine":52,"endColumn":10,"suggestions":"46"},{"ruleId":"37","severity":1,"message":"41","line":10,"column":12,"nodeType":"39","messageId":"40","endLine":10,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":81,"column":29,"nodeType":"49","endLine":81,"endColumn":93},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Carousel' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'style' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imgList'. Either include it or remove the dependency array.","ArrayExpression",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [imgList]",{"range":"55","text":"56"},[1466,1468],"[imgList]"]